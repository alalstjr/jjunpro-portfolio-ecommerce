#--------------------------------------------------
# COMMON
#--------------------------------------------------
project.name    = Ecommerce
project.version = 1.1.2
project.state   = prod

server.port=8081

spring.thymeleaf.cache=false

#--------------------------------------------------
# DB
#--------------------------------------------------
# set datasource
#spring.datasource.url=jdbc:h2:mem:test
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver

# Test DB
spring.datasource.url      = jdbc:postgresql://localhost:5432/template1
spring.datasource.username = test
spring.datasource.password = test
#spring.datasource.url      = jdbc:postgresql://localhost:5432/test
#spring.datasource.username = postgres
#spring.datasource.password = root

# Prod DB
#spring.datasource.url      = jdbc:postgresql://34.64.228.150:5432/postgres
#spring.datasource.username = postgres
#spring.datasource.password = root

# scnema.sql 항상 실행하도록 설정
spring.datasource.initialization-mode=always

#--------------------------------------------------
# Mybatis
#--------------------------------------------------
# mybatis 매핑 type을 짧게 쓰기 위한 설정
# mapper 이하를 로깅 위치로 설정.
mybatis.type-aliases-package=com.jjunpro.shop.model
# 쿼리문 로그출력 여부
# logging.level.com.jjunpro.shop.mapper=TRACE

#--------------------------------------------------
# HTTPS
#--------------------------------------------------
server.ssl.key-store=classpath:talk2amareswaran-keystore.p12
server.ssl.key-store-password=password
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=talk2amareswaran-tomcat

#--------------------------------------------------
# Log 설정
#--------------------------------------------------
# Log 로컬 저장
logging.file.path = logs
# Log 색상 표현
spring.output.ansi.enabled = always

#--------------------------------------------------
# Multipart
#--------------------------------------------------
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=30MB
# Max Request Size
spring.servlet.multipart.max-request-size=50MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/Users/kimminseok/Desktop/images
# file.upload-dir=C:/Users/jjunpro/Desktop/web/spring

#--------------------------------------------------
# GCS (google cloud storage)
#--------------------------------------------------
google.id       = jjunpro-storage